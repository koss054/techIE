@model ProductQueryViewModel

@{
    ViewBag.Title = "Explore Marketplace";
}

<head>
    <link rel="stylesheet" href="~/css/marketplace/footer.css" />
    <link rel="stylesheet" href="~/css/marketplace/logo.css" />
    <link rel="stylesheet" href="~/css/marketplace/search-bar.css" />
    <link rel="stylesheet" href="~/css/marketplace/button.css" />
    <link rel="stylesheet" href="~/css/horizontal-row/marketplace-rows.css" />
    <link rel="stylesheet" href="~/css/store/marketplace-store.css" />
    <link rel="stylesheet" href="~/css/animations/grow-on-hover.css" />
</head>

<div class="store-heading">
    <h1 class="text-center mt-4">@ViewBag.Title</h1>
    <hr class="marketplace text-center" />
</div>


<form method="get"> 
    <div class="search-bar"> 
        <div class="form-group"> 
            <div class="form-group"> 
                <label asp-for="Category"></label> 
                <select asp-for="Category" class="form-control"> 
                    <option value="">All</option> 
                    @foreach (var category in Model.Categories) 
                    { 
                        <option value="@category">@category</option> 
                    } 
                </select> 
            </div> 
        </div> 

        <div> 
            <label asp-for="SearchTerm"></label> 
            <input asp-for="SearchTerm" class="form-control" placeholder="..."> 
        </div> 

        <div> 
            <div class="form-group"> 
                <label asp-for="Sorting"></label> 
                <select asp-for="Sorting" class="form-control"> 
                    <option value="0">Newest</option> 
                    <option value="1">Lowest price</option> 
                    <option value="2">Alphabetical</option> 
                </select> 
            </div> 
        </div> 

 
        <div> 
            <div class="form-group" id="search-button"> 
                <input type="submit" value="Search" class="btn btn-primary" /> 
            </div> 
        </div> 
    </div> 
</form> 

@{ 
    var previousPage = Model.CurrentPage - 1; 
    if (previousPage < 1) 
    { 
        previousPage = 1; 
    } 

    var maxPage = Math.Ceiling((double)Model.TotalProductsCount / ProductQueryViewModel.ProductsPerPage); 
} 

<div class="navigation-bar"> 
    <div> 
        <a class="btn btn-primary navigation @(Model.CurrentPage == 1 ? "disabled" : string.Empty)" 
           asp-area="Marketplace"
           asp-controller="Store" 
           asp-action="Explore" 
           asp-route-currentPage="@previousPage" 
           asp-route-category="@Model.Category" 
           asp-route-searchTerm="@Model.SearchTerm" 
           asp-route-sorting="@((int)Model.Sorting)"><<</a> 
    </div> 

    @{ 
        var shouldButtonBeDisabled = Model.CurrentPage == maxPage || 
        !Model.Products.Any(); 
    } 

    <div> 
        <a class="btn btn-primary navigation @(shouldButtonBeDisabled ? "disabled" : string.Empty)" 
           asp-area="Marketplace"
           asp-controller="Store" 
           asp-action="Explore" 
           asp-route-currentPage="@(Model.CurrentPage + 1)" 
           asp-route-category="@Model.Category" 
           asp-route-searchTerm="@Model.SearchTerm" 
           asp-route-sorting="@((int)Model.Sorting)">>></a> 
    </div> 
</div> 

@if (!Model.Products.Any()) 
{ 
    <h2 class="text-center">No products match your criteria.</h2> 
} 

<div class="product-panel">
    @if (Model.Products.Count() > 0) 
    {
        @foreach (var product in Model.Products)
        {
            <div class="product grow">
                <img src="@product.ImageUrl">
                <hr class="img-seperator marketplace" />
                <h4 class="text-center">@product.Name</h4>
                <h6 class="text-center">$@product.Price</h6>
            </div>
        }
    }
    else
    {
        <div style="margin-top: 60px">
            <h2>No items added, yet. Be the <span style="color: deeppink">first</span> one!</h2>
        </div>
    }
    
</div>